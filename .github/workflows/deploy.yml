name: Deploy Webpage
run-name: Deploy Webpage
on:
  push:
    branches:
      - main
jobs:
  web-deploy:
    name: 🚀 Deploy Website Every Commit
    runs-on: ubuntu-latest
    steps:
    - name: 🚚 Get Latest Code
      uses: actions/checkout@v3

    - name: 🛠 Check required tools
      run: |
        echo "Checking for rsync, npm, node, python3..."
        which rsync
        rsync --version
        which npm
        npm --version
        which node
        node --version
        which python3
        python3 --version

    - name: 👀 Install build tools
      run: |
        npm install -g uglify-js purify-css clean-css-cli html-minifier

    - name: ⏳ Generating Pages
      run: |
        cd generator
        python3 generate.py
        cd ..

    - name: ⏬ Minifying HTML
      run: |
        find . -name "*.html" -exec html-minifier --collapse-whitespace --remove-comments --minify-css true --minify-js true -o {} {} \;

    - name: 🎨 Minifying CSS
      run: |
        purifycss styles/bootstrap-full.css generator/template.html --out styles/bootstrap-full.min.css
        cd styles
        rm -f bootstrap-full.css
        mv bootstrap-full.min.css bootstrap-full.css
        cleancss -o main.min.css main.css
        cleancss -o bootstrap-full.min.css bootstrap-full.css
        rm -f main.css bootstrap-full.css
        mv main.min.css main.css
        mv bootstrap-full.min.css bootstrap-full.css
        cd ..

    - name: 🗜️ Minifying Javascript
      run: |
        cd scripts
        uglifyjs script.js > script.min.js
        rm -f script.js
        mv script.min.js script.js
        cd ..

    - name: 🧩 Inline CSS & JS in HTML
      run: |
        CSS_CONTENT=$(cat styles/main.css)
        BOOTSTRAP_CONTENT=$(cat styles/bootstrap-full.css)
        JS_CONTENT=$(cat scripts/script.js)
        for file in $(find . -name "*.html"); do
          sed -i "/<link.*bootstrap-full\.css.*>/ { r /dev/stdin; d; }" "$file" <<< "<style>${BOOTSTRAP_CONTENT}</style>"
          sed -i "/<link.*main\.css.*>/ { r /dev/stdin; d; }" "$file" <<< "<style>${CSS_CONTENT}</style>"
          sed -i "/<script.*script\.js.*><\/script>/ { r /dev/stdin; d; }" "$file" <<< "<script>${JS_CONTENT}</script>"
        done

    - name: 🔧 Select Files
      run: |
        mkdir publish
        cp -r assets de en favicon impr scripts styles index.php robots.txt sitemap.xml publish/
        cd publish
        ls

    - name: 🚢 Deploy to server
      uses: TillKnollmann/ssh-deploy@main
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        ARGS: "-rlgoDzvc -i"
        SOURCE: "publish/"
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        TARGET: ${{ secrets.REMOTE_TARGET }}
        EXCLUDE: ""
        SCRIPT_BEFORE: |
        SCRIPT_AFTER: |
          echo $RSYNC_STDOUT
